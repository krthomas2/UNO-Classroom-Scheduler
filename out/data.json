{
    "project": {},
    "files": {
        "Classroom_Scheduler\\public\\javascripts\\xlsx.js": {
            "name": "Classroom_Scheduler\\public\\javascripts\\xlsx.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Classroom_Scheduler\\routes\\index.js": {
            "name": "Classroom_Scheduler\\routes\\index.js",
            "modules": {},
            "classes": {
                "index.js": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Classroom_Scheduler\\app.js": {
            "name": "Classroom_Scheduler\\app.js",
            "modules": {
                "express": 1,
                "path": 1,
                "morgan": 1,
                "cookie-parser": 1,
                "body-parser": 1,
                "xlsx": 1,
                "index.js": 1,
                "multer": 1,
                "DB_Transactions.js": 1,
                "fs": 1,
                "json2xls": 1,
                "underscore": 1
            },
            "classes": {
                "generateSchedule": 1,
                "downloadSchedule": 1,
                "upload": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "express": {
            "name": "express",
            "submodules": {},
            "classes": {
                "index.js": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\routes\\index.js",
            "line": 9,
            "description": "Express is used for the routing, and generating of the starter application"
        },
        "path": {
            "name": "path",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 13,
            "description": "Path is used to get the location of other modules"
        },
        "morgan": {
            "name": "morgan",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 18,
            "description": "Morgan is used to create temporary files for upload/download"
        },
        "cookie-parser": {
            "name": "cookie-parser",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 23,
            "description": "Cookie-Parser is used by Express as part of the generation of the starter app"
        },
        "body-parser": {
            "name": "body-parser",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 28,
            "description": "Body-Parser is used by Express as part of the generation of the starter app"
        },
        "xlsx": {
            "name": "xlsx",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 34,
            "description": "Xlsx is the Excel parsing module.  It has many outputs,\nfor this project the WS and _toJson are used."
        },
        "index.js": {
            "name": "index.js",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 40,
            "description": "Index JS is the main route handling module"
        },
        "multer": {
            "name": "multer",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 45,
            "description": "Is needed for file transfers"
        },
        "DB_Transactions.js": {
            "name": "DB_Transactions.js",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 50,
            "description": "This is the database transactions script,\nit holds all the communication functions for the\napp."
        },
        "fs": {
            "name": "fs",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 57,
            "description": "Is used to write the application"
        },
        "json2xls": {
            "name": "json2xls",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 62,
            "description": "Is used to turn the array of class information into\n the final schedule.xlsx file"
        },
        "underscore": {
            "name": "underscore",
            "submodules": {},
            "classes": {
                "generateSchedule": 1,
                "downloadSchedule": 1,
                "upload": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Classroom_Scheduler\\app.js",
            "line": 457,
            "description": "Is a very handy module that has many functions built in\nto handle sorting, filtering of lists/objects"
        }
    },
    "classes": {
        "index.js": {
            "name": "index.js",
            "shortname": "index.js",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "express",
            "file": "Classroom_Scheduler\\routes\\index.js",
            "line": 9,
            "description": "The routes for the application"
        },
        "generateSchedule": {
            "name": "generateSchedule",
            "shortname": "generateSchedule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "underscore",
            "namespace": "",
            "file": "Classroom_Scheduler\\app.js",
            "line": 108,
            "description": "Generates the schedule based on\nthe groups and rooms.\nReturns document of non added groups"
        },
        "downloadSchedule": {
            "name": "downloadSchedule",
            "shortname": "downloadSchedule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "underscore",
            "namespace": "",
            "file": "Classroom_Scheduler\\app.js",
            "line": 391,
            "description": "Downloads data from the database in an excel file."
        },
        "upload": {
            "name": "upload",
            "shortname": "upload",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "underscore",
            "namespace": "",
            "file": "Classroom_Scheduler\\app.js",
            "line": 457,
            "description": "uploads the selected document from the client side to the server.  Makes sure only one document is stored at a time in the application and that it is of type xls or xlsx."
        }
    },
    "classitems": [
        {
            "file": "Classroom_Scheduler\\public\\javascripts\\xlsx.js",
            "line": 948,
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\public\\javascripts\\xlsx.js",
            "line": 953,
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\public\\javascripts\\xlsx.js",
            "line": 1016,
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\public\\javascripts\\xlsx.js",
            "line": 1083,
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\public\\javascripts\\xlsx.js",
            "line": 1099,
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\public\\javascripts\\xlsx.js",
            "line": 1119,
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\public\\javascripts\\xlsx.js",
            "line": 1217,
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\routes\\index.js",
            "line": 14,
            "itemtype": "method",
            "name": "calendar",
            "description": "Gets the calendar page and populates it with room choices",
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\routes\\index.js",
            "line": 24,
            "itemtype": "method",
            "name": "calendar",
            "description": "Get the calendar info for the all class-groups in the specified room",
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\routes\\index.js",
            "line": 43,
            "itemtype": "method",
            "name": "home",
            "description": "Get the application Home page.  THis is where we envision UNO user logins to happen to control who has access to the scheduler menu.",
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\routes\\index.js",
            "line": 53,
            "itemtype": "method",
            "name": "editSchedule",
            "description": "Gets the",
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\routes\\index.js",
            "line": 67,
            "class": "index.js"
        },
        {
            "file": "Classroom_Scheduler\\app.js",
            "line": 2,
            "description": "These are the external modules brought in for this application.\n The main modules used are xlsx, fs, j2xls, and underscore\n xlsx is an excel parser\n fs is used with j2xls to write the output\n underscore is used for sorting and managing lists/objects",
            "class": "generateSchedule"
        },
        {
            "file": "Classroom_Scheduler\\app.js",
            "line": 174,
            "itemtype": "method",
            "name": "assign",
            "params": [
                {
                    "name": "roomnum",
                    "description": "The room to have the group-class added to it"
                },
                {
                    "name": "classinfo",
                    "description": "The class to be added to the room"
                }
            ],
            "description": "Takes an approved room number and group-class\nand puts them in the schedule for the proper days.\nThis is used for adding other group-classes as data\nto see if the room is open at this time.",
            "class": "generateSchedule",
            "module": "underscore"
        },
        {
            "file": "Classroom_Scheduler\\app.js",
            "line": 231,
            "itemtype": "method",
            "name": "findroom",
            "params": [
                {
                    "name": "classinfo",
                    "description": "The class to find the room for"
                }
            ],
            "description": "findroom takes all the rooms available and sorts them by capacity\nthen it finds the smallest room available for the class in question.\nThere is no return, but it does generate a list of acceptable classrooms: that is classrooms that can hold this class.",
            "class": "generateSchedule",
            "module": "underscore"
        },
        {
            "file": "Classroom_Scheduler\\app.js",
            "line": 263,
            "itemtype": "method",
            "name": "checkAvailable",
            "params": [
                {
                    "name": "roomnumber",
                    "description": "The room to be checked"
                },
                {
                    "name": "classinfo",
                    "description": "The class to be checked"
                }
            ],
            "return": {
                "description": "True or False",
                "type": "Boolean"
            },
            "description": "Checks if the room is available for all days and times that the class has a session.\nReturns true for available and false for not available.",
            "class": "generateSchedule",
            "module": "underscore"
        },
        {
            "file": "Classroom_Scheduler\\app.js",
            "line": 318,
            "itemtype": "method",
            "name": "checkTime",
            "params": [
                {
                    "name": "starttime",
                    "description": "start time of the class to check the room for availability"
                },
                {
                    "name": "roominfo",
                    "description": "day array of the room in question"
                }
            ],
            "return": {
                "description": "True for open or False for closed/taken",
                "type": "Boolean"
            },
            "description": "Checks the specific time of the day array to see if it is open.",
            "class": "generateSchedule",
            "module": "underscore"
        },
        {
            "file": "Classroom_Scheduler\\app.js",
            "line": 344,
            "itemtype": "method",
            "name": "getvalue",
            "params": [
                {
                    "name": "oldtime",
                    "description": "Time in the format of 10:00:00 AM"
                }
            ],
            "return": {
                "description": "Time in the format 123456",
                "type": "Number"
            },
            "description": "Takes time stamp and converts it to a single number for comparisons.",
            "class": "generateSchedule",
            "module": "underscore"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Classroom_Scheduler\\routes\\index.js:14"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Classroom_Scheduler\\routes\\index.js:24"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Classroom_Scheduler\\routes\\index.js:43"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Classroom_Scheduler\\routes\\index.js:53"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Classroom_Scheduler\\app.js:174"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Classroom_Scheduler\\app.js:231"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Classroom_Scheduler\\app.js:263"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Classroom_Scheduler\\app.js:263"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Classroom_Scheduler\\app.js:318"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Classroom_Scheduler\\app.js:318"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Classroom_Scheduler\\app.js:344"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Classroom_Scheduler\\app.js:344"
        },
        {
            "message": "Missing item type",
            "line": " Classroom_Scheduler\\public\\javascripts\\xlsx.js:948"
        },
        {
            "message": "Missing item type",
            "line": " Classroom_Scheduler\\public\\javascripts\\xlsx.js:953"
        },
        {
            "message": "Missing item type",
            "line": " Classroom_Scheduler\\public\\javascripts\\xlsx.js:1016"
        },
        {
            "message": "Missing item type",
            "line": " Classroom_Scheduler\\public\\javascripts\\xlsx.js:1083"
        },
        {
            "message": "Missing item type",
            "line": " Classroom_Scheduler\\public\\javascripts\\xlsx.js:1099"
        },
        {
            "message": "Missing item type",
            "line": " Classroom_Scheduler\\public\\javascripts\\xlsx.js:1119"
        },
        {
            "message": "Missing item type",
            "line": " Classroom_Scheduler\\public\\javascripts\\xlsx.js:1217"
        },
        {
            "message": "Missing item type",
            "line": " Classroom_Scheduler\\routes\\index.js:67"
        },
        {
            "message": "Missing item type\nThese are the external modules brought in for this application.\n The main modules used are xlsx, fs, j2xls, and underscore\n xlsx is an excel parser\n fs is used with j2xls to write the output\n underscore is used for sorting and managing lists/objects",
            "line": " Classroom_Scheduler\\app.js:2"
        }
    ]
}